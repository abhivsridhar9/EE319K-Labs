


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program Written By: Ryan Root and Abhi Sridhar
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 3/3/2019
    5 00000000         ; You are given a simple stepper motor software system w
                       ith one input and
    6 00000000         ; four outputs. This program runs, but you are asked to 
                       add minimally intrusive
    7 00000000         ; debugging instruments to verify it is running properly
                       . 
    8 00000000         ;   If the input PA4 is low, the stepper motor outputs c
                       ycle 10,6,5,9,...
    9 00000000         ;   If the input PA4 is high, the stepper motor outputs 
                       cycle 5,6,10,9,...
   10 00000000         ;   Insert debugging instruments which gather data (stat
                       e and timing)
   11 00000000         ;   to verify that the system is functioning as expected
                       .
   12 00000000         ; Hardware connections (External: One button and four ou
                       tputs to stepper motor)
   13 00000000         ;  PA4 is Button input  (1 means pressed, 0 means not pr
                       essed)
   14 00000000         ;  PE3-0 are stepper motor outputs 
   15 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   16 00000000         ; Instrumentation data to be gathered is as follows:
   17 00000000         ; After every output to Port E, collect one state and ti
                       me entry. 
   18 00000000         ; The state information is the 5 bits on Port A bit 4 an
                       d Port E PE3-0
   19 00000000         ;   place one 8-bit entry in your Data Buffer  
   20 00000000         ; The time information is the 24-bit time difference bet
                       ween this output and the previous (in 12.5ns units)
   21 00000000         ;   place one 32-bit entry in the Time Buffer
   22 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   23 00000000         ;    you must handle the roll over as Current goes 3,2,1
                       ,0,0x00FFFFFF,0xFFFFFE,
   24 00000000         ; Note: The size of both buffers is 100 entries. Once yo
                       u fill these
   25 00000000         ;       entries you should stop collecting data
   26 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   27 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   28 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   29 00000000         
   30 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   31 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   32 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   33 00000000 40004400 
                       GPIO_PORTA_DIR_R
                               EQU              0x40004400



ARM Macro Assembler    Page 2 


   34 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   35 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   36 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   37 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   38 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   39 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000         ; RAM Area
   42 00000000                 AREA             DATA, ALIGN=2
   43 00000000 00 00 00 
              00       Index   SPACE            4           ; index into Steppe
                                                            r table 0,1,2,3
   44 00000004 00 00 00 
              00       Direction
                               SPACE            4           ; -1 for CCW, 0 for
                                                             stop 1 for CW
   45 00000008         
   46 00000008         ;place your debug variables in RAM here
   47 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       DataBuffer
                               SPACE            100
   48 0000006C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TimeBuffer
                               SPACE            400
   49 000001FC 00 00 00 
              00       DataPt  SPACE            4
   50 00000200 00 00 00 
              00       TimePt  SPACE            4
   51 00000204 00 00 00 
              00       PrevTime
                               SPACE            4
   52 00000208         
   53 00000208         ; ROM Area
   54 00000208                 IMPORT           TExaS_Init
   55 00000208                 IMPORT           SysTick_Init
   56 00000208         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   57 00000208                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   58 00000000                 THUMB
   59 00000000 05 06 0A 
              09       Stepper DCB              5,6,10,9
   60 00000004                 EXPORT           Start
   61 00000004         
   62 00000004         Start
   63 00000004         ; TExaS_Init sets bus clock at 80 MHz
   64 00000004         ; PA4, PE3-PE0 out logic analyzer to TExasDisplay
   65 00000004 4870            LDR              R0,=SendDataToLogicAnalyzer
   66 00000006 F040 0001       ORR              R0,R0,#1
   67 0000000A F7FF FFFE       BL               TExaS_Init  ; logic analyzer, 8
                                                            0 MHz
   68 0000000E         ;place your initializations here
   69 0000000E F000 F821       BL               Stepper_Init ; initialize stepp
                                                            er motor
   70 00000012 F000 F839       BL               Switch_Init ; initialize switch
                                                             input
   71 00000016 F000 F8B6       BL               Heartbeat_Init ; initialize onb
                                                            oard LED



ARM Macro Assembler    Page 6 


   72 0000001A         ;**********************
   73 0000001A F000 F85A       BL               Debug_Init  ;(you write this)
   74 0000001E         ;**********************
   75 0000001E B662            CPSIE            I           ; TExaS logic analy
                                                            zer runs on interru
                                                            pts
   76 00000020 F04F 0500       MOV              R5,#0       ; last PA4
   77 00000024         loop
   78 00000024         
   79 00000024 4969            LDR              R1,=GPIO_PORTA_DATA_R
   80 00000026 680C            LDR              R4,[R1]     ;current value of s
                                                            witch
   81 00000028 F004 0410       AND              R4,R4,#0x10 ; select just bit 4
                                                            
   82 0000002C 2C00            CMP              R4,#0
   83 0000002E D00A            BEQ              no          ; skip if not pushe
                                                            d
   84 00000030 2D00            CMP              R5,#0
   85 00000032 D108            BNE              no          ; skip if pushed la
                                                            st time
   86 00000034         ; this time yes, last time no
   87 00000034 4966            LDR              R1,=Direction
   88 00000036 6808            LDR              R0,[R1]     ; current direction
                                                            
   89 00000038 F100 0001       ADD              R0,R0,#1    ;-1,0,1 to 0,1,2
   90 0000003C 2802            CMP              R0,#2
   91 0000003E D101            BNE              ok
   92 00000040 F04F 30FF       MOV              R0,#-1      ; cycles through va
                                                            lues -1,0,1
   93 00000044 6008    ok      STR              R0,[R1]     ; Direction=0 (CW) 
                                                             
   94 00000046 4625    no      MOV              R5,R4       ; setup for next ti
                                                            me
   95 00000048 F000 F830       BL               Stepper_Step
   96 0000004C 4861            LDR              R0,=1600000
   97 0000004E F000 F83D       BL               Wait        ; time delay fixed 
                                                            but not accurate .0
                                                            4  
   98 00000052 E7E7            B                loop
   99 00000054         ;Initialize stepper motor interface
  100 00000054         Stepper_Init
  101 00000054 F04F 0001       MOV              R0,#1
  102 00000058 495D            LDR              R1,=Direction
  103 0000005A 6008            STR              R0,[R1]     ; Direction=0 (CW)
  104 0000005C F04F 0000       MOV              R0,#0
  105 00000060 495D            LDR              R1,=Index
  106 00000062 6008            STR              R0,[R1]     ; Index=0
  107 00000064         ; activate clock for Port E
  108 00000064 495D            LDR              R1, =SYSCTL_RCGCGPIO_R
  109 00000066 6808            LDR              R0, [R1]
  110 00000068 F040 0010       ORR              R0, R0, #0x10 ; Clock for E
  111 0000006C 6008            STR              R0, [R1]
  112 0000006E BF00            NOP
  113 00000070 BF00            NOP                          ; allow time to fin
                                                            ish activating
  114 00000072         ; set direction register
  115 00000072 495B            LDR              R1, =GPIO_PORTE_DIR_R
  116 00000074 6808            LDR              R0, [R1]
  117 00000076 F040 000F       ORR              R0, R0, #0x0F 



ARM Macro Assembler    Page 7 


                                                            ; Output on PE0-PE3
                                                            
  118 0000007A 6008            STR              R0, [R1]
  119 0000007C         ; enable digital port
  120 0000007C 4959            LDR              R1, =GPIO_PORTE_DEN_R
  121 0000007E 6808            LDR              R0, [R1]
  122 00000080 F040 000F       ORR              R0, R0, #0x0F ; enable PE3-0
  123 00000084 6008            STR              R0, [R1]
  124 00000086 4770            BX               LR
  125 00000088         ;Initialize switch interface
  126 00000088         Switch_Init
  127 00000088         ; activate clock for Port A
  128 00000088 4954            LDR              R1, =SYSCTL_RCGCGPIO_R
  129 0000008A 6808            LDR              R0, [R1]
  130 0000008C F040 0001       ORR              R0, R0, #0x01 ; Clock for A
  131 00000090 6008            STR              R0, [R1]
  132 00000092 BF00            NOP
  133 00000094 BF00            NOP                          ; allow time to fin
                                                            ish activating
  134 00000096         ; set direction register
  135 00000096 4954            LDR              R1, =GPIO_PORTA_DIR_R
  136 00000098 6808            LDR              R0, [R1]
  137 0000009A F020 0010       BIC              R0, R0, #0x10 ; Input on PA4
  138 0000009E 6008            STR              R0, [R1]
  139 000000A0         ; 5) enable digital port
  140 000000A0 4952            LDR              R1, =GPIO_PORTA_DEN_R
  141 000000A2 6808            LDR              R0, [R1]
  142 000000A4 F040 0010       ORR              R0, R0, #0x10 ; enable PA4
  143 000000A8 6008            STR              R0, [R1]
  144 000000AA 4770            BX               LR
  145 000000AC         ; Step the motor clockwise
  146 000000AC         ; Direction determines the rotational direction
  147 000000AC         ; Input: None
  148 000000AC         ; Output: None
  149 000000AC         Stepper_Step
  150 000000AC B510            PUSH             {R4,LR}
  151 000000AE 494A            LDR              R1,=Index
  152 000000B0 680A            LDR              R2,[R1]     ; old Index
  153 000000B2 4B47            LDR              R3,=Direction
  154 000000B4 6818            LDR              R0,[R3]     ; -1 for CCW, 0 for
                                                             stop 1 for CW
  155 000000B6 4402            ADD              R2,R2,R0
  156 000000B8 F002 0203       AND              R2,R2,#3    ; 0,1,2,3,0,1,2,...
                                                            
  157 000000BC 600A            STR              R2,[R1]     ; new Index
  158 000000BE 4B4C            LDR              R3,=Stepper ; table
  159 000000C0 5CD0            LDRB             R0,[R2,R3]  ; next output: 5,6,
                                                            10,9,5,6,10,...
  160 000000C2 494C            LDR              R1,=GPIO_PORTE_DATA_R 
                                                            ; change PE3-PE0
  161 000000C4 6008            STR              R0,[R1]
  162 000000C6 F000 F824       BL               Debug_Capture
  163 000000CA BD10            POP              {R4,PC}
  164 000000CC         ; inaccurate and inefficient time delay
  165 000000CC         Wait
  166 000000CC 1E40            SUBS             R0,R0,#1    ; outer loop
  167 000000CE D1FD            BNE              Wait
  168 000000D0 4770            BX               LR
  169 000000D2         



ARM Macro Assembler    Page 8 


  170 000000D2         Debug_Init
  171 000000D2 B51F            PUSH             {R0-R4,LR}
  172 000000D4         ; you write this
  173 000000D4 4848            LDR              R0, =DataBuffer
  174 000000D6 F04F 0164       MOV              R1, #100
  175 000000DA F04F 32FF       MOV              R2, #0xFFFFFFFF
  176 000000DE         DataInitLoop
  177 000000DE 6002            STR              R2, [R0]
  178 000000E0 F100 0004       ADD              R0, #4
  179 000000E4 3904            SUBS             R1, #4
  180 000000E6 D1FA            BNE              DataInitLoop
  181 000000E8         
  182 000000E8 4844            LDR              R0, =TimeBuffer
  183 000000EA F44F 71C8       MOV              R1, #400
  184 000000EE         TimeInitLoop
  185 000000EE 6002            STR              R2, [R0]
  186 000000F0 F100 0004       ADD              R0, #4
  187 000000F4 3904            SUBS             R1, #4
  188 000000F6 D1FA            BNE              TimeInitLoop
  189 000000F8         
  190 000000F8 483F            LDR              R0, =DataBuffer
  191 000000FA 4941            LDR              R1, =DataPt
  192 000000FC 6008            STR              R0, [R1]
  193 000000FE 483F            LDR              R0, =TimeBuffer
  194 00000100 4940            LDR              R1, =TimePt
  195 00000102 6008            STR              R0, [R1]
  196 00000104 4840            LDR              R0, =PrevTime
  197 00000106 F06F 417F       LDR              R1, =0x00FFFFFF
  198 0000010A 6001            STR              R1, [R0]
  199 0000010C F7FF FFFE       BL               SysTick_Init
  200 00000110         
  201 00000110 BD1F            POP              {R0-R4,PC}
  202 00000112         ;Debug capture      
  203 00000112         Debug_Capture
  204 00000112 B57F            PUSH             {R0-R6,LR}
  205 00000114         ; you write this
  206 00000114 4838            LDR              R0, =DataBuffer
  207 00000116 F100 0064       ADD              R0, #100
  208 0000011A 4A38            LDR              R2, =TimeBuffer
  209 0000011C F502 72C8       ADD              R2, #400
  210 00000120 4937            LDR              R1, =DataPt
  211 00000122 6809            LDR              R1, [R1]
  212 00000124 4B37            LDR              R3, =TimePt
  213 00000126 681B            LDR              R3, [R3]
  214 00000128         
  215 00000128         ;Check to see if buffers are full
  216 00000128 4288            CMP              R0, R1
  217 0000012A D02B            BEQ              Done
  218 0000012C 429A            CMP              R2, R3
  219 0000012E D029            BEQ              Done
  220 00000130         
  221 00000130         ;Capture data
  222 00000130 4C36            LDR              R4, =NVIC_ST_CURRENT_R
  223 00000132 6824            LDR              R4, [R4]
  224 00000134 4925            LDR              R1, =GPIO_PORTA_DATA_R
  225 00000136 6809            LDR              R1, [R1]
  226 00000138 4A2E            LDR              R2, =GPIO_PORTE_DATA_R
  227 0000013A 6812            LDR              R2, [R2]
  228 0000013C 4830            LDR              R0, =DataPt



ARM Macro Assembler    Page 9 


  229 0000013E 6800            LDR              R0, [R0]
  230 00000140 F001 0110       AND              R1, #0x10
  231 00000144 F002 020F       AND              R2, #0x0F
  232 00000148 EA81 0302       EOR              R3, R1, R2
  233 0000014C 7003            STRB             R3, [R0]
  234 0000014E F100 0301       ADD              R3, R0, #1
  235 00000152 482B            LDR              R0, =DataPt
  236 00000154 6003            STR              R3, [R0]
  237 00000156         
  238 00000156 482B            LDR              R0, =TimePt
  239 00000158 6800            LDR              R0, [R0]
  240 0000015A 4621            MOV              R1, R4
  241 0000015C 4A2A            LDR              R2, =PrevTime
  242 0000015E 6812            LDR              R2, [R2]
  243 00000160 EBA2 0201       SUB              R2, R1
  244 00000164 F06F 437F       LDR              R3, =0x00FFFFFF
  245 00000168 EA02 0203       AND              R2, R3
  246 0000016C 6002            STR              R2, [R0]
  247 0000016E 4A26            LDR              R2, =PrevTime
  248 00000170 6011            STR              R1, [R2]
  249 00000172 F100 0304       ADD              R3, R0, #4
  250 00000176 4823            LDR              R0, =TimePt
  251 00000178 6003            STR              R3, [R0]
  252 0000017A         
  253 0000017A         ;Toggle LED
  254 0000017A 4825            LDR              R0, =GPIO_PORTF_DATA_R
  255 0000017C 6801            LDR              R1, [R0]
  256 0000017E F081 0104       EOR              R1, #0x04
  257 00000182 6001            STR              R1, [R0]
  258 00000184         
  259 00000184         Done
  260 00000184 BD7F            POP              {R0-R6,PC}
  261 00000186         ;43 Instructions (1075 ns) -- 47 w/LED Toggle (1175 ns)
  262 00000186         ;Time Between Calls (~.08 s)
  263 00000186         ;Estimated Intrusiveness (0.00134372%) -- w/LED Toggle (
                       0.00146872%)
  264 00000186         
  265 00000186         ;Initializes the Heartbeat/LED Indicator
  266 00000186         Heartbeat_Init
  267 00000186 B507            PUSH             {R0-R2, LR}
  268 00000188 4814            LDR              R0, =SYSCTL_RCGCGPIO_R
  269 0000018A 6801            LDR              R1, [R0]
  270 0000018C F041 0120       ORR              R1, #0x20
  271 00000190 6001            STR              R1, [R0]
  272 00000192 BF00            NOP
  273 00000194 BF00            NOP
  274 00000196 BF00            NOP
  275 00000198 BF00            NOP
  276 0000019A 481E            LDR              R0, =GPIO_PORTF_DIR_R
  277 0000019C 6801            LDR              R1, [R0]
  278 0000019E F041 0104       ORR              R1, #0x04
  279 000001A2 6001            STR              R1, [R0]
  280 000001A4 481C            LDR              R0, =GPIO_PORTF_DEN_R
  281 000001A6 6801            LDR              R1, [R0]
  282 000001A8 F041 0104       ORR              R1, #0x04
  283 000001AC 6001            STR              R1, [R0]
  284 000001AE         
  285 000001AE BD07            POP              {R0-R2, PC}
  286 000001B0         



ARM Macro Assembler    Page 10 


  287 000001B0         ; edit the following only if you need to move pins from 
                       PA4, PE3-0      
  288 000001B0         ; logic analyzer on the real board
  289 000001B0 40004040 
                       PA4     equ              0x40004040
  290 000001B0 4002403C 
                       PE30    equ              0x4002403C
  291 000001B0 4000C000 
                       UART0_DR_R
                               equ              0x4000C000
  292 000001B0         SendDataToLogicAnalyzer
  293 000001B0 491A            LDR              R1,=PA4
  294 000001B2 6809            LDR              R1,[R1]     ; read PA4
  295 000001B4 481A            LDR              R0,=PE30    ; read PE3-PE0
  296 000001B6 6800            LDR              R0,[R0]
  297 000001B8 EA40 0001       ORR              R0,R0,R1    ;combine into one 5
                                                            -bit value
  298 000001BC F040 0080       ORR              R0,R0,#0x80
  299 000001C0 4918            LDR              R1,=UART0_DR_R
  300 000001C2 6008            STR              R0,[R1]     ; send data at 10 k
                                                            Hz
  301 000001C4 4770            BX               LR
  302 000001C6         
  303 000001C6         
  304 000001C6 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  305 000001C8                 END                          ; end of file
              00000000 
              400043FC 
              00000000 
              00186A00 
              00000000 
              400FE608 
              40024400 
              4002451C 
              40004400 
              4000451C 
              00000000 
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
              400253FC 
              40025400 
              4002551C 
              40004040 
              4002403C 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab4 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Inclu
de\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526"
 --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst
 main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000008

Symbol: DataBuffer
   Definitions
      At line 47 in file main.s
   Uses
      At line 173 in file main.s
      At line 190 in file main.s
      At line 206 in file main.s

DataPt 000001FC

Symbol: DataPt
   Definitions
      At line 49 in file main.s
   Uses
      At line 191 in file main.s
      At line 210 in file main.s
      At line 228 in file main.s
      At line 235 in file main.s

Direction 00000004

Symbol: Direction
   Definitions
      At line 44 in file main.s
   Uses
      At line 87 in file main.s
      At line 102 in file main.s
      At line 153 in file main.s

Index 00000000

Symbol: Index
   Definitions
      At line 43 in file main.s
   Uses
      At line 105 in file main.s
      At line 151 in file main.s

PrevTime 00000204

Symbol: PrevTime
   Definitions
      At line 51 in file main.s
   Uses
      At line 196 in file main.s
      At line 241 in file main.s
      At line 247 in file main.s

TimeBuffer 0000006C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: TimeBuffer
   Definitions
      At line 48 in file main.s
   Uses
      At line 182 in file main.s
      At line 193 in file main.s
      At line 208 in file main.s

TimePt 00000200

Symbol: TimePt
   Definitions
      At line 50 in file main.s
   Uses
      At line 194 in file main.s
      At line 212 in file main.s
      At line 238 in file main.s
      At line 250 in file main.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 57 in file main.s
   Uses
      None
Comment: .text unused
DataInitLoop 000000DE

Symbol: DataInitLoop
   Definitions
      At line 176 in file main.s
   Uses
      At line 180 in file main.s
Comment: DataInitLoop used once
Debug_Capture 00000112

Symbol: Debug_Capture
   Definitions
      At line 203 in file main.s
   Uses
      At line 162 in file main.s
Comment: Debug_Capture used once
Debug_Init 000000D2

Symbol: Debug_Init
   Definitions
      At line 170 in file main.s
   Uses
      At line 73 in file main.s
Comment: Debug_Init used once
Done 00000184

Symbol: Done
   Definitions
      At line 259 in file main.s
   Uses
      At line 217 in file main.s
      At line 219 in file main.s

Heartbeat_Init 00000186

Symbol: Heartbeat_Init
   Definitions
      At line 266 in file main.s
   Uses
      At line 71 in file main.s
Comment: Heartbeat_Init used once
SendDataToLogicAnalyzer 000001B0

Symbol: SendDataToLogicAnalyzer
   Definitions
      At line 292 in file main.s
   Uses
      At line 65 in file main.s
Comment: SendDataToLogicAnalyzer used once
Start 00000004




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Start
   Definitions
      At line 62 in file main.s
   Uses
      At line 60 in file main.s
Comment: Start used once
Stepper 00000000

Symbol: Stepper
   Definitions
      At line 59 in file main.s
   Uses
      At line 158 in file main.s
Comment: Stepper used once
Stepper_Init 00000054

Symbol: Stepper_Init
   Definitions
      At line 100 in file main.s
   Uses
      At line 69 in file main.s
Comment: Stepper_Init used once
Stepper_Step 000000AC

Symbol: Stepper_Step
   Definitions
      At line 149 in file main.s
   Uses
      At line 95 in file main.s
Comment: Stepper_Step used once
Switch_Init 00000088

Symbol: Switch_Init
   Definitions
      At line 126 in file main.s
   Uses
      At line 70 in file main.s
Comment: Switch_Init used once
TimeInitLoop 000000EE

Symbol: TimeInitLoop
   Definitions
      At line 184 in file main.s
   Uses
      At line 188 in file main.s
Comment: TimeInitLoop used once
Wait 000000CC

Symbol: Wait
   Definitions
      At line 165 in file main.s
   Uses
      At line 97 in file main.s
      At line 167 in file main.s

loop 00000024

Symbol: loop
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 77 in file main.s
   Uses
      At line 98 in file main.s
Comment: loop used once
no 00000046

Symbol: no
   Definitions
      At line 94 in file main.s
   Uses
      At line 83 in file main.s
      At line 85 in file main.s

ok 00000044

Symbol: ok
   Definitions
      At line 93 in file main.s
   Uses
      At line 91 in file main.s
Comment: ok used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 79 in file main.s
      At line 224 in file main.s

GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 140 in file main.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 135 in file main.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 160 in file main.s
      At line 226 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 120 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 115 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 254 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 280 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 276 in file main.s
Comment: GPIO_PORTF_DIR_R used once
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 222 in file main.s
Comment: NVIC_ST_CURRENT_R used once
PA4 40004040

Symbol: PA4
   Definitions
      At line 289 in file main.s
   Uses
      At line 293 in file main.s
Comment: PA4 used once
PE30 4002403C

Symbol: PE30
   Definitions
      At line 290 in file main.s
   Uses
      At line 295 in file main.s
Comment: PE30 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 108 in file main.s
      At line 128 in file main.s
      At line 268 in file main.s

UART0_DR_R 4000C000

Symbol: UART0_DR_R
   Definitions
      At line 291 in file main.s
   Uses
      At line 299 in file main.s
Comment: UART0_DR_R used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 55 in file main.s
   Uses
      At line 199 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 67 in file main.s
Comment: TExaS_Init used once
2 symbols
377 symbols in table
